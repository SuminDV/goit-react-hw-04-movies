{"version":3,"sources":["pages/Cast/Cast.module.css","services/api.js","routes.js","pages/HomePage/HomePage.js","pages/Cast/Cast.js","pages/Reviews/Reviews.js","pages/MovieDetailsPage/MovieDetailsPage.js","components/SearchForm/SearchForm.js","pages/MoviesPage/MoviesPage.js","App.js","index.js"],"names":["module","exports","basicUrl","key","searchMovie","query","axios","get","HomePage","state","popular","then","resData","console","log","setState","data","results","this","map","el","id","to","routes","title","Component","Cast","cast","movieId","props","match","params","Res","className","st","list","image","src","profile_path","alt","name","character","Reviews","reviews","author","content","MovieDetailsPage","searchFilm","genres","onBackButton","history","goBack","url","onClick","type","poster_path","original_title","release_date","vote_average","overview","reduce","acc","exact","path","component","SearchForm","input","onChange","e","target","value","handleSubmit","preventDefault","onSubmit","MoviesPage","searchFilms","API","push","pathname","search","location","getMovies","URLSearchParams","App","films","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.de27d60d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Cast_image__2XsFV\",\"list\":\"Cast_list__1f769\"};","import axios from 'axios';\n\n// https://api.themoviedb.org/3/trending/movie/week?api_key=4ff52a95ec89fb43a388f843c820a16f\n\nconst basicUrl = 'https://api.themoviedb.org/3';\nconst key = '4ff52a95ec89fb43a388f843c820a16f';\n\nexport const popularFilms = () =>\n  axios.get(`${basicUrl}/trending/movie/week?api_key=${key}`);\n\nexport const searchInfo = id =>\n  axios.get(`${basicUrl}/movie/${id}?api_key=${key}`);\n\nexport const searchMovie = (query = 'batman') =>\n  axios.get(\n    `${basicUrl}/search/movie?api_key=${key}&language=en-US&page=1&include_adult=false&query=${query}`,\n  );\n\nexport const Cast = id =>\n  axios.get(`${basicUrl}/movie/${id}/credits?api_key=${key}`);\n\nexport const Reviews = id =>\n  axios.get(`${basicUrl}/movie/${id}/reviews?api_key=${key}`);\n","export default {\n  HOME: '/',\n  MOVIES: '/movies',\n  MOVIE_DETAILS: '/movies/:movieId',\n  MOVIE_CAST: '/movies/:movieId/cast',\n  MOVIE_REVIEWS: '/movies/:movieId/reviews',\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as API from '../../services/api';\nimport routes from '../../routes';\n\nexport default class HomePage extends Component {\n  state = {\n    popular: [],\n  };\n\n  componentDidMount() {\n    API.popularFilms().then(resData => {\n      console.log(resData);\n      this.setState({ popular: resData.data.results });\n    });\n  }\n\n  render() {\n    const { popular } = this.state;\n    return (\n      <>\n        <h2>Trending today</h2>\n        <ul>\n          {popular.map(el => (\n            <li key={el.id}>\n              <Link to={`${routes.MOVIES}/${el.id}`}>{el.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport * as API from '../../services/api';\nimport st from './Cast.module.css';\n\nexport default class Cast extends Component {\n  state = {\n    cast: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    API.Cast(movieId).then(Res => {\n      console.log('Res :', Res);\n      this.setState({ cast: Res.data.cast });\n    });\n  }\n\n  render() {\n    const { cast } = this.state;\n    const { match } = this.props;\n    return (\n      <ul>\n        {cast.map(el => (\n          <li className={st.list} key={el.id}>\n            <img\n              className={st.image}\n              src={`https://image.tmdb.org/t/p/w500${el.profile_path}`}\n              alt=\"\"\n            />\n            <p>{el.name}</p>\n            <p>{el.character}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as API from '../../services/api';\n\nexport default class Reviews extends Component {\n  static propTypes = {\n    match: PropTypes.shape({}).isRequired,\n    movieId: PropTypes.shape({}).isRequired,\n  };\n\n  state = {\n    reviews: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    API.Reviews(movieId).then(Res => {\n      console.log('Res', Res);\n      this.setState({ reviews: Res.data.results });\n    });\n  }\n\n  render() {\n    const { reviews } = this.state;\n    return (\n      <ul>\n        {reviews.map(el => (\n          <li key={el.id}>\n            <p>{el.author}</p>\n            <p>{el.content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport * as API from '../../services/api';\nimport routes from '../../routes';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nexport default class MovieDetailsPage extends Component {\n  state = {\n    searchFilm: { genres: [] },\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    console.log('match', match);\n    API.searchInfo(movieId).then(resData => {\n      console.log('resData', resData);\n      this.setState({ searchFilm: resData.data });\n    });\n  }\n\n  onBackButton = () => {\n    const { history } = this.props;\n    history.goBack();\n  };\n\n  render() {\n    const { searchFilm } = this.state;\n    const { match } = this.props;\n    const { url } = match;\n\n    return (\n      <>\n        <div>\n          <button onClick={this.onBackButton} type=\"button\">\n            Go back\n          </button>\n          <img\n            src={`https://image.tmdb.org/t/p/w500${searchFilm.poster_path}`}\n            alt=\"\"\n          />\n          <h2>\n            {searchFilm.original_title} ({searchFilm.release_date})\n          </h2>\n          <p>User score: {searchFilm.vote_average * 10}%</p>\n          <h3>Overview</h3>\n          {/* <br /> */}\n          <p>{searchFilm.overview}</p>\n          <h3>Genres</h3>\n          {searchFilm.genres.reduce((acc, el) => `${acc} ${el.name}`, '')}\n          <ul>\n            <li>\n              <NavLink to={`${url}/cast`}>Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to={`${url}/reviews`}>Reviews</NavLink>\n            </li>\n          </ul>\n          <Switch>\n            <Route exact path={routes.MOVIE_CAST} component={Cast} />\n            <Route exact path={routes.MOVIE_REVIEWS} component={Reviews} />\n          </Switch>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class SearchForm extends Component {\n  state = {\n    input: '',\n  };\n\n  onChange = e => {\n    this.setState({ input: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSubmit } = this.props;\n\n    onSubmit(this.state.input);\n    this.setState({ input: '' });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input value={value} onChange={this.onChange} type=\"text\" />\n          <button type=\"submit\">\n            <span>Search film</span>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport * as API from '../../services/api';\nimport routes from '../../routes';\n\nexport default class MoviesPage extends Component {\n  static propTypes = {\n    history: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({}).isRequired,\n  };\n\n  state = {\n    query: '',\n    searchFilms: [],\n  };\n\n  componentDidMount() {\n    const { location } = this.props;\n    const getMovies = new URLSearchParams(location.search).get('query');\n    console.log('getMovies', getMovies);\n    if (!getMovies) {\n      return;\n    }\n    this.onSubmit(getMovies);\n  }\n\n  onSubmit = query => {\n    const { history } = this.props;\n    this.setState({ query });\n    API.searchMovie(query).then(resData => {\n      console.log('resData :', resData);\n      this.setState({ searchFilms: resData.data.results });\n    });\n    history.push({\n      pathname: history.pathname,\n      search: `query=${query}`,\n    });\n  };\n\n  render() {\n    const { query, searchFilms } = this.state;\n    return (\n      <div>\n        <SearchForm onSubmit={this.onSubmit} />\n        <ul>\n          {searchFilms.map(el => (\n            <li key={el.id}>\n              <Link to={`${routes.MOVIES}/${el.id}`}>{el.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport HomePage from './pages/HomePage/HomePage';\nimport MovieDetailsPage from './pages/MovieDetailsPage/MovieDetailsPage';\nimport routes from './routes';\nimport MoviesPage from './pages/MoviesPage/MoviesPage';\n\nexport default class App extends Component {\n  state = {\n    films: [],\n  };\n\n  render() {\n    const { films } = this.state;\n    return (\n      <>\n        <header>\n          <NavLink to={routes.HOME}>Home page</NavLink>\n          <NavLink to={routes.MOVIES}> Movies page</NavLink>\n        </header>\n        <Switch>\n          <Route exact path={routes.HOME} component={HomePage} />\n          <Route path={routes.MOVIE_DETAILS} component={MovieDetailsPage} />\n          <Route exact path={routes.MOVIES} component={MoviesPage} />\n        </Switch>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}